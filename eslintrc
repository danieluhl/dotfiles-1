{
  "env": {
    "browser": true,
    "node": true,
    "es6": true,
    "jasmine": true,
    "jquery": true
  },
  "extends": "airbnb",
  "rules": {
    // fixable styles
    "strict": [2],
    "indent": [1, 2, {"SwitchCase": 1}], // specify tab or space width for your code (fixable)
    "prefer-underscore-utilities": [1],
    "js-dash-class-selectors": [1],
    "no-jquery-is-checked": [1],
    "jquery-on-dom-ready": [1],
    "quotes": [2, "single"], // specify whether backticks, double or single quotes should be used (fixable)
    "semi": [2, "always"], // require or disallow use of semicolons instead of ASI (fixable)
    "eqeqeq": [2, "allow-null"], // require the use of === and !== (fixable)
    "comma-spacing": [1, {
      "before": false,
      "after": true
    }], // requires space after comma but not before (fixable)
    "eol-last": [1], // require newline at end of file (fixable)
    "no-spaced-func": [1], // disallow space between function identifier and application (fixable)
    "no-trailing-spaces": [1], // disallow trailing whitespace at the end of lines (fixable)
    "object-curly-spacing": [1, "never"], // require or disallow padding inside curly braces (fixable)
    "keyword-spacing": [1, {
      "before": true,
      "after": true
    }], // require a space before and after certain keywords (fixable)
    "space-before-blocks": [1, "always"], // require or disallow a space before blocks (fixable)
    "space-before-function-paren": [1, "never"], // require or disallow a space before function opening parenthesis (fixable)
    "space-infix-ops": [1], // require spaces around operators (fixable)
    "no-extra-semi": [1], // disallow unnecessary semicolons (recommended) (fixable)
    "no-multi-spaces": [1], // disallow use of multiple spaces (fixable)
    "array-bracket-spacing": [1, "never"], // enforce spacing inside array brackets (fixable)
    "block-spacing": [1, "always"], // disallow or enforce spaces inside of single line blocks (fixable)
    "computed-property-spacing": [1, "never"], // require or disallow padding inside computed properties (fixable)
    "space-unary-ops": [1, {
      "words": true,
      "nonwords": false
    }], // require or disallow spaces before/after unary operators (fixable)

    // non-fixable styles
    "no-dollar-prefixed-literals": [1],
    "prefer-get-set-deep": [1],
    "prefer-wf-ajax": [1],
    "curly": [2], // specify curly brace conventions for all control statements
    "camelcase": [2, {
      "properties": "never"
    }], // require camel case vars but not properties
    "comma-style": [2, "last"], // require comma last on a line
    "comma-dangle": [1],
    "no-extra-boolean-cast": [1],
    "spaced-comment": [1, "always"], // require or disallow a space immediately following the // or /* in a comment
    "new-parens": [2], // disallow the omission of parentheses when invoking a constructor with no arguments
    "no-lonely-if": [1], // disallow if as the only statement in an else block
    "no-mixed-spaces-and-tabs": [2, "smart-tabs"], // disallow mixed spaces and tabs for indentation (recommended)
    "no-new-object": [1], // disallow the use of the Object constructor
    "wrap-iife": [1, "any"], // require IIFEs to be wrapped in parentheses
    "key-spacing": [1], // enforces spacing around the colon in object literal properties
    "operator-linebreak": [1, "after"], // enforces a particular operator line break style
    "quote-props": [2, "as-needed", {
      "keywords": true,
      "unnecessary": false
    }],

    // code
    "no-empty-pattern": [2], // disallow use of empty destructuring patterns
    "no-empty": [1],
    "no-eval": [2], // disallow use of eval()
    "no-implied-eval": [2], // disallow use of eval()-like methods
    "no-labels": [2], // disallow use of labeled statements
    "no-lone-blocks": [2], // disallow unnecessary nested blocks
    "no-native-reassign": [2], // disallow reassignments of native objects
    "no-new-func": [2], // disallow use of new operator for Function object
    "no-redeclare": [2], // disallow declaring the same variable more then once
    "no-self-compare": [2], // disallow comparisons where both sides are exactly the same (off by default)
    "no-sequences": [0], // disallow use of comma operator
    "no-throw-literal": [0], // Restrict what can be thrown as an exception
    "no-unused-expressions": [1], // disallow usage of expressions in statement position
    "no-useless-call": [1], // disallow unnecessary .call() and .apply()
    "max-nested-callbacks": [1, 5], // specify the maximum depth callbacks can be nested

    // variables
    "no-catch-shadow": 2, // disallow the catch clause parameter name being the same as a variable in the outer scope (off by default in the node environment)
    "no-label-var": 2, // disallow labels that share a name with a variable
    "no-shadow-restricted-names": 2, // disallow shadowing of names such as arguments
    "no-undef": 2, // disallow use of undeclared variables unless mentioned in a /*global */ block
    "no-undef-init": 2, // disallow use of undefined when initializing variables
    "no-unused-vars": [1, {
      "vars": "local",
      "args": "after-used"
    }], //  disallow declaration of variables that are not used in the code (recommended)
    "no-useless-concat": [1], // disallow unnecessary concatenation of literals or template literals
    "no-undefined": 1, // disallow use of undefined variable (off by default)
    "complexity": [1, 11], // specify the maximum cyclomatic complexity allowed in a program (off by default)
    "consistent-return": [1], // require return statements to either always or never specify values
    "no-console": [2], // disallow use of console (off by default in the node environment)
    "dot-notation": [1], // encourages use of dot notation whenever possible
    "no-caller": [1], // disallow use of arguments.caller or arguments.callee
    "no-extra-bind": [1], // disallow unnecessary function binding
    "no-new-wrappers": [1], // disallows creating new instances of String, Number, and Boolean
    "no-octal": [1], // disallow use of octal literals
    "no-octal-escape": [1], // disallow use of octal escape sequences in string literals, such as var foo = "Copyright \251";
    "no-proto": [1], // disallow usage of __proto__ property
    "no-script-url": [1], // disallow use of javascript: urls.
    "no-void": [1], // disallow use of the void operator
    "no-with": [1], // disallow use of the with statement
    "radix": [2], // require use of the second argument for parseInt() (off by default)
    "new-cap": [1, {"capIsNewExceptions": ["Deferred", "DataTable"]}], // require a capital letter for constructors
    "no-unneeded-ternary": [1], // disallow the use of ternary operators when a simpler alternative exists
    "no-fallthrough": [1],
    "no-unreachable": [1],
    "no-self-assign": [1],
    "no-unexpected-multiline": [1],
    "no-inline-comments": [1], // disallow inline comments after code

    /* SOME DAY */
    "no-multi-str": [0], // disallow use of multiline strings
    "no-use-before-define": 0, // disallow use of variables before they are defined
    "brace-style": [0, "1tbs", {
      "allowSingleLine": true
    }], // one true brace style but allow start and end on single line
    "consistent-this": [0, "self"], // requre "this" alias to be "self"
    "linebreak-style": 0 // disallow mixed 'LF' and 'CRLF' as linebreaks
  }
}